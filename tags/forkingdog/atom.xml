<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: forkingdog | GeekerProbe]]></title>
  <link href="http://blog.wtlucky.com/tags/forkingdog/atom.xml" rel="self"/>
  <link href="http://blog.wtlucky.com/"/>
  <updated>2016-10-11T18:29:00+08:00</updated>
  <id>http://blog.wtlucky.com/</id>
  <author>
    <name><![CDATA[wtlucky ]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[FDStackView —— Downward Compatible UIStackView (Part 3)]]></title>
    <link href="http://blog.wtlucky.com/blog/2016/02/04/fdstackview-downward-compatible-uistackview-part-3/"/>
    <updated>2016-02-04T15:24:55+08:00</updated>
    <id>http://blog.wtlucky.com/blog/2016/02/04/fdstackview-downward-compatible-uistackview-part-3</id>
    <content type="html"><![CDATA[<p>上一篇<a href="http://blog.wtlucky.com/blog/2016/01/19/fdstackview-downward-compatible-uistackview-part-2/"><code>Part 2</code></a>只介绍了第一个技术点<strong><code>alignment</code>和<code>distribution</code>的约束如何添加和管理</strong>的<code>alignment</code>这一部分的内容，这一篇继续介绍<code>distribution</code>的约束添加和管理。</p>

<p>同样的在介绍实现之前，我先介绍一下<code>StackView</code>的各种<code>distribution</code>模式都是什么效果的：</p>

<!-- More -->


<ul>
<li><strong>UIStackViewDistributionFill</strong>：这种应该是目前最常用的了，它就是将<code>arrangedSubviews</code>填充满整个<code>StackView</code>，如果设置了spacing，那么这些<code>arrangedSubviews</code>之间的间距就是spacing。如果减去所有的spacing，所有的<code>arrangedSubview</code>的固有尺寸(<code>intrinsicContentSize</code>)不能填满或者超出<code>StackView</code>的尺寸，那就会按照<code>Hugging</code>或者<code>CompressionResistance</code>的优先级来拉伸或压缩一些<code>arrangedSubview</code>。如果出现优先级相同的情况，就按排列顺序来拉伸或压缩。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/distribute_fillroportionally_2x_4a83cd74-be8d-4ef1-adf9-c5252a1bcc65.png" alt="image" /></p>

<ul>
<li><strong>UIStackViewDistributionFillEqually</strong>：这种就是<code>StackView</code>的尺寸减去所有的spacing之后均分给<code>arrangedSubviews</code>，每个<code>arrangedSubview</code>的尺寸是相同的。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/distribute_fillequally_2x_5ccda608-869a-48b9-9515-9b6314d091a9.png" alt="image" /></p>

<ul>
<li><strong>UIStackViewDistributionFillProportionally</strong>：这种跟FillEqually差不多，只不过这个不是讲尺寸均分给<code>arrangedSubviews</code>，而是根据<code>arrangedSubviews</code>的<code>intrinsicContentSize</code>按比例分配。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/distribute_fillroportionally_2x_4a83cd74-be8d-4ef1-adf9-c5252a1bcc65.png" alt="image" /></p>

<ul>
<li><strong>UIStackViewDistributionEqualSpacing</strong>：这种是使<code>arrangedSubview</code>之间的spacing相等，但是这个spacing是有可能大于<code>StackView</code>所设置的spacing，但是绝对不会小于。这个类型的布局可以这样理解，先按所有的<code>arrangedSubview</code>的<code>intrinsicContentSize</code>布局，然后余下的空间均分为spacing，如果大约<code>StackView</code>设置的spacing那这样就OK了，如果小于就按照<code>StackView</code>设置的spacing，然后按照<code>CompressionResistance</code>的优先级来压缩一个<code>arrangedSubview</code>。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/distribute_equalspacing_2x_6668568b-a445-402c-94ae-f5e85b0b10bd.png" alt="image" /></p>

<ul>
<li><strong>UIStackViewDistributionEqualCentering</strong>：这种是使<code>arrangedSubview</code>的中心点之间的距离相等，这样没两个<code>arrangedSubview</code>之间的spacing就有可能不是相等的，但是这个spacing仍然是大于等于<code>StackView</code>设置的spacing的，不会是小于。这个类型布局仍然是如果<code>StackView</code>有多余的空间会均分给<code>arrangedSubviews</code>之间的spacing，如果空间不够那就按照<code>CompressionResistance</code>的优先级压缩<code>arrangedSubview</code>。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/distribute_equalcentering_2x_7089d0d3-f161-452b-ab3e-9885c7b6101e.png" alt="image" /></p>

<p>在介绍<code>distribution</code>的约束创建和管理的过程中也涉及到了第二个知识点<strong><code>spacing</code>和<code>distribution</code>的关系及约束的创建</strong>的内容，所以这两部都在这里介绍了。</p>

<p><code>distribution</code>方向同样也包括4种约束，这4种约束也都是添加到<code>canvas</code>上的，除此之外它还包括一组通过<code>NSMapTable</code>维护的<code>FDGapLayoutGuide</code>。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">FDStackViewDistributionLayoutArrangement</span> : <span class="nc">FDStackViewLayoutArrangement</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">NSMutableArray</span><span class="o">&lt;</span><span class="bp">NSLayoutConstraint</span> <span class="o">*&gt;</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">canvasConnectionConstraints</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">NSMapTable</span><span class="o">&lt;</span><span class="bp">UIView</span> <span class="o">*</span><span class="p">,</span> <span class="bp">NSLayoutConstraint</span> <span class="o">*&gt;</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">edgeToEdgeConstraints</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">NSMapTable</span><span class="o">&lt;</span><span class="bp">UIView</span> <span class="o">*</span><span class="p">,</span> <span class="bp">NSLayoutConstraint</span> <span class="o">*&gt;</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">relatedDimensionConstraints</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">NSMapTable</span><span class="o">&lt;</span><span class="bp">UIView</span> <span class="o">*</span><span class="p">,</span> <span class="bp">NSLayoutConstraint</span> <span class="o">*&gt;</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">hiddingDimensionConstraints</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">NSMapTable</span><span class="o">&lt;</span><span class="bp">UIView</span> <span class="o">*</span><span class="p">,</span> <span class="n">FDGapLayoutGuide</span> <span class="o">*&gt;</span> <span class="o">*</span><span class="n">spacingOrCenteringGuides</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></p>

<ul>
<li><strong>canvasConnectionConstraints</strong>：它管路的是<code>arrangedSubviews</code>与<code>canvas</code>之间的约束；</li>
<li><strong>edgeToEdgeConstraints</strong>：它管理的是<code>arrangedSubviews</code>之间一个接一个的约束，这里需要注意这些约束的常量是<code>StackView</code>的spacing，但是关系却不一定是相等。还有就是如果有个<code>arrangedSubview</code>被<code>hidden</code>了那么它仍然参与到<code>edgeToEdge</code>的约束创建及布局中，只不过是把它与后一个<code>arrangedSubview</code>之间的<code>edgeToEdgeConstraint</code>的常量由spacing设置为<code>0</code>。</li>
<li><strong>relatedDimensionConstraints</strong>：它管理的是<code>arrangedSubviews</code>之间<code>distribution</code>各种相等关系的约束，这里面的管理的约束是<code>StackView</code>的<code>distribution</code>布局的精髓所在。如果是<code>UIStackViewDistributionFill</code>模式的话，是没有<code>relatedDimensionConstraint</code>的。<code>UIStackViewDistributionFillEqually</code>与<code>UIStackViewDistributionFillProportionally</code>使用的是一种类型的约束，而<code>UIStackViewDistributionEqualCentering</code>与<code>UIStackViewDistributionEqualSpacing</code>使用的却是另一种类型的约束，后面在详细介绍。</li>
<li><strong>hiddingDimensionConstraints</strong>：它管理的是当<code>arrangedSubviews</code>有<code>hidden</code>的时候，该<code>arrangedSubview</code>的有关<code>dimensionAttribute</code>的约束；</li>
<li><strong>spacingOrCenteringGuides</strong>：这个管理的就不是约束了，它是一组<code>FDGapLayoutGuide</code>，只用在<code>UIStackViewDistributionEqualCentering</code>和<code>UIStackViewDistributionEqualSpacing</code>这两种模式中，<code>FDGapLayoutGuide</code>用来连接左右两个<code>arrangedSubView</code>，作为一个辅助view来约束左右两个view的位置关系。<code>spacingOrCenteringGuides</code>的key是<code>FDGapLayoutGuide</code>连接的左边的<code>arrangedSubview</code>。</li>
</ul>


<p>最后说明的就是<code>FDGapLayoutGuide</code>与<code>arrangedSubView</code>相连接的约束没有被<code>NSMapTable</code>所管理，它们就只是被加到了<code>canvas</code>上。因为当模式改变时，所有的<code>FDGapLayoutGuide</code>会被移除或者重建，所以跟它们相关的约束也会被一并清楚。</p>

<p>那么以上几种约束的创建顺序是怎样的呢？</p>

<ol>
<li>首先是<code>canvasConnectionConstraints</code>；</li>
<li>其次是每一种模式都会涉及到的<code>edgeToEdgeConstraints</code>；</li>
<li>然后再遍历所有<code>arrangedSubviews</code>，如果有<code>arrangedSubview</code>被<code>hidden</code>了，那么就会创建<code>hiddingDimensionConstraints</code>；</li>
<li>最后是<code>relatedDimensionConstraints</code>，这里如果是<code>UIStackViewDistributionEqualCentering</code>和<code>UIStackViewDistributionEqualSpacing</code>这两种模式的话，会先创建出<code>spacingOrCenteringGuides</code>。</li>
</ol>


<p>下面具体来看，首先<code>canvasConnectionConstraints</code>：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">resetCanvasConnectionsEffect</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">removeConstraints</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">canvasConnectionConstraints</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">self</span><span class="p">.</span><span class="n">items</span><span class="p">.</span><span class="n">count</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="bp">NSMutableArray</span> <span class="o">*</span><span class="n">canvasConnectionConstraints</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableArray</span> <span class="n">new</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLayoutAttribute</span> <span class="n">minAttribute</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">minAttributeForCanvasConnections</span><span class="p">];</span>
</span><span class='line'><span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">head</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">minAttribute</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">NSLayoutRelationEqual</span> <span class="nl">toItem</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">items</span><span class="p">.</span><span class="n">firstObject</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">minAttribute</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">canvasConnectionConstraints</span> <span class="nl">addObject</span><span class="p">:</span><span class="n">head</span><span class="p">];</span>
</span><span class='line'><span class="n">head</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-canvas-connection&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">end</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">minAttribute</span> <span class="o">+</span> <span class="mi">1</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">NSLayoutRelationEqual</span> <span class="nl">toItem</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">items</span><span class="p">.</span><span class="n">lastObject</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">minAttribute</span> <span class="o">+</span> <span class="mi">1</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">canvasConnectionConstraints</span> <span class="nl">addObject</span><span class="p">:</span><span class="n">end</span><span class="p">];</span>
</span><span class='line'><span class="n">end</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-canvas-connection&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">canvasConnectionConstraints</span> <span class="o">=</span> <span class="n">canvasConnectionConstraints</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraints</span><span class="p">:</span><span class="n">canvasConnectionConstraints</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>比较简单，先判断一下不需要创建的情况，然后就是根据<code>axis</code>选用不同的<code>NSLayoutAttribute</code>，将第一个和最后一个<code>arrangedSubview</code>分别与<code>StackView</code>创建相等的约束。这样一来再加上<code>FDStackViewAlignmentLayoutArrangement</code>中创建的两个<code>canvasConnectionConstraints</code>，整个<code>canvas</code>的上下左右四个方向的约束就都有了，满足了<code>canvas</code>布局的基本条件。</p>

<p>接下来是<code>edgeToEdgeConstraints</code>：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">resetFillEffect</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// spacing - edge to edge</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">removeConstraints</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">edgeToEdgeConstraints</span><span class="p">.</span><span class="n">fd_allObjects</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">edgeToEdgeConstraints</span> <span class="n">removeAllObjects</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">removeConstraints</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">hiddingDimensionConstraints</span><span class="p">.</span><span class="n">fd_allObjects</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">hiddingDimensionConstraints</span> <span class="n">removeAllObjects</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="bp">UIView</span> <span class="o">*</span><span class="n">offset</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">items</span><span class="p">.</span><span class="n">car</span><span class="p">;</span>
</span><span class='line'><span class="bp">UIView</span> <span class="o">*</span><span class="n">last</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">items</span><span class="p">.</span><span class="n">lastObject</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="n">view</span> <span class="k">in</span> <span class="nb">self</span><span class="p">.</span><span class="n">items</span><span class="p">.</span><span class="n">cdr</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLayoutAttribute</span> <span class="n">attribute</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">minAttributeForGapConstraint</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSLayoutRelation</span> <span class="n">relation</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">edgeToEdgeRelation</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">spacing</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="n">view</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">attribute</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">relation</span> <span class="nl">toItem</span><span class="p">:</span><span class="n">offset</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">attribute</span> <span class="o">+</span> <span class="mi">1</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">spacing</span><span class="p">];</span>
</span><span class='line'>    <span class="n">spacing</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-spacing&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">spacing</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">edgeToEdgeConstraints</span> <span class="nl">setObject</span><span class="p">:</span><span class="n">spacing</span> <span class="nl">forKey</span><span class="p">:</span><span class="n">offset</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">offset</span><span class="p">.</span><span class="n">hidden</span> <span class="o">||</span> <span class="p">(</span><span class="n">view</span> <span class="o">==</span> <span class="n">last</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">view</span><span class="p">.</span><span class="n">hidden</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">spacing</span><span class="p">.</span><span class="n">constant</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">offset</span> <span class="o">=</span> <span class="n">view</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// hidding dimensions</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="n">view</span> <span class="k">in</span> <span class="nb">self</span><span class="p">.</span><span class="n">items</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">view</span><span class="p">.</span><span class="n">hidden</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSLayoutAttribute</span> <span class="n">dimensionAttribute</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">dimensionAttributeForCurrentAxis</span><span class="p">];</span>
</span><span class='line'>        <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">dimensionConstraint</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="n">view</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">dimensionAttribute</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">NSLayoutRelationEqual</span> <span class="nl">toItem</span><span class="p">:</span><span class="nb">nil</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">NSLayoutAttributeNotAnAttribute</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>        <span class="n">dimensionConstraint</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-hiding&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">dimensionConstraint</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">hiddingDimensionConstraints</span> <span class="nl">setObject</span><span class="p">:</span><span class="n">dimensionConstraint</span> <span class="nl">forKey</span><span class="p">:</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>先移去旧的相关约束，然后将<code>arrangedSubviews</code>依次迭代遍历，根据<code>axis</code>选择正确的<code>NSLayoutAttribute</code>创建首尾相接的约束，常量为<code>StackView</code>的spacing，关系则根据<code>distribution</code>的不同而或等于或大于等于。</p>

<p>这里如前面介绍的一样，如果这个<code>arrangedSubview</code>是<code>hidden</code>的那么它仍然参与<code>edgeToEdgeConstraints</code>的创建，只不过它与后一个<code>arrangedSubview</code>的约束常量不再是spacing而是<code>0</code>。还有一个特殊的就是如果是最后一个<code>arrangedSubview</code>被<code>hidden</code>了，那么它与前一个<code>arrangedSubview</code>的约束的常量也同样是<code>0</code>。</p>

<p>最后再遍历所有<code>arrangedSubviews</code>，如果有<code>arrangedSubview</code>被<code>hidden</code>了，那就根据<code>axis</code>给这个<code>arrangedSubview</code>创建一个常量为<code>0</code>的<code>dimensionConstraint</code>。</p>

<p>如果是<code>UIStackViewDistributionFill</code>的话，那么到这里所有<code>distribution</code>的约束就已经创建完了，已经满足需求了。但是其他几种还要有后续的步骤。</p>

<hr />

<p>先来看<code>UIStackViewDistributionFillEqually</code>和<code>UIStackViewDistributionFillProportionally</code>这两种类型：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">resetEquallyEffect</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">removeConstraints</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">relatedDimensionConstraints</span><span class="p">.</span><span class="n">fd_allObjects</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">relatedDimensionConstraints</span> <span class="n">removeAllObjects</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="bp">NSArray</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="bp">UIView</span> <span class="o">*&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="o">*</span><span class="n">visiableViews</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">visiableItems</span><span class="p">;</span>
</span><span class='line'><span class="bp">UIView</span> <span class="o">*</span><span class="n">offset</span> <span class="o">=</span> <span class="n">visiableViews</span><span class="p">.</span><span class="n">car</span><span class="p">;</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">order</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="n">view</span> <span class="k">in</span> <span class="n">visiableViews</span><span class="p">.</span><span class="n">cdr</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLayoutAttribute</span> <span class="n">attribute</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">dimensionAttributeForCurrentAxis</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSLayoutRelation</span> <span class="n">relation</span> <span class="o">=</span> <span class="n">NSLayoutRelationEqual</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">multiplier</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">distribution</span> <span class="o">==</span> <span class="n">UIStackViewDistributionFillEqually</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="p">({</span>
</span><span class='line'>        <span class="bp">CGSize</span> <span class="n">size1</span> <span class="o">=</span> <span class="n">offset</span><span class="p">.</span><span class="n">intrinsicContentSize</span><span class="p">;</span>
</span><span class='line'>        <span class="bp">CGSize</span> <span class="n">size2</span> <span class="o">=</span> <span class="n">view</span><span class="p">.</span><span class="n">intrinsicContentSize</span><span class="p">;</span>
</span><span class='line'>        <span class="n">CGFloat</span> <span class="n">multiplier</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">attribute</span> <span class="o">==</span> <span class="n">NSLayoutAttributeWidth</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">multiplier</span> <span class="o">=</span> <span class="n">size1</span><span class="p">.</span><span class="n">width</span> <span class="o">/</span> <span class="n">size2</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">multiplier</span> <span class="o">=</span> <span class="n">size1</span><span class="p">.</span><span class="n">height</span> <span class="o">/</span> <span class="n">size2</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">multiplier</span><span class="p">;</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">equally</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="n">offset</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">attribute</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">relation</span> <span class="nl">toItem</span><span class="p">:</span><span class="n">view</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">attribute</span> <span class="nl">multiplier</span><span class="p">:</span><span class="n">multiplier</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="n">equally</span><span class="p">.</span><span class="n">priority</span> <span class="o">=</span> <span class="n">UILayoutPriorityRequired</span> <span class="o">-</span> <span class="p">(</span><span class="o">++</span><span class="n">order</span><span class="p">);</span>
</span><span class='line'>    <span class="n">equally</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">distribution</span> <span class="o">==</span> <span class="n">UIStackViewDistributionFillEqually</span> <span class="o">?</span> <span class="s">@&quot;FDSV-fill-equally&quot;</span> <span class="o">:</span> <span class="s">@&quot;FDSV-fill-proportionally&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">equally</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">relatedDimensionConstraints</span> <span class="nl">setObject</span><span class="p">:</span><span class="n">equally</span> <span class="nl">forKey</span><span class="p">:</span><span class="n">offset</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">offset</span> <span class="o">=</span> <span class="n">view</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>仍然是先干掉旧的约束，然后跟前面不同的是要取出所有的<strong>非hidden</strong>的<code>arrangedSubview</code>添加约束，而不是所有<code>arrangedSubview</code>。</p>

<p>这两个<code>distribution</code>类型是将当前<code>axis</code>所对应的<code>dimensionAttribute</code>的约束作用在<code>arrangedSubviews</code>上，如果是<code>UIStackViewDistributionFillEqually</code>，那么约束的比例(<code>multiplier</code>)就是<code>1</code>，如果是<code>UIStackViewDistributionFillProportionally</code>，那<code>multiplier</code>就需要通过计算得出，是通过两个<code>arrangedSubview</code>的<code>intrinsicContentSize</code>做比值，这样就能保证<code>arrangedSubview</code>最终会按照<code>intrinsicContentSize</code>的比例来分配<code>StackView</code>的空间布局。</p>

<p>再来看<code>UIStackViewDistributionEqualCentering</code>和<code>UIStackViewDistributionEqualSpacing</code>这两种类型：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">resetSpacingOrCenteringGuides</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">spacingOrCenteringGuides</span><span class="p">.</span><span class="n">fd_allObjects</span> <span class="nl">makeObjectsPerformSelector</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">removeFromSuperview</span><span class="p">)];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">spacingOrCenteringGuides</span> <span class="n">removeAllObjects</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">NSArray</span><span class="o">&lt;</span><span class="bp">UIView</span> <span class="o">*&gt;</span> <span class="o">*</span><span class="n">visiableItems</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">visiableItems</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">visiableItems</span><span class="p">.</span><span class="n">count</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[[</span><span class="n">visiableItems</span> <span class="nl">subarrayWithRange</span><span class="p">:(</span><span class="n">NSRange</span><span class="p">){</span><span class="mi">0</span><span class="p">,</span> <span class="n">visiableItems</span><span class="p">.</span><span class="n">count</span> <span class="o">-</span> <span class="mi">1</span><span class="p">}]</span> <span class="nl">enumerateObjectsUsingBlock</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="n">item</span><span class="p">,</span> <span class="bp">NSUInteger</span> <span class="n">idx</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="o">*</span><span class="n">stop</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">FDGapLayoutGuide</span> <span class="o">*</span><span class="n">guide</span> <span class="o">=</span> <span class="p">[</span><span class="n">FDGapLayoutGuide</span> <span class="n">new</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">guide</span><span class="p">];</span>
</span><span class='line'>    <span class="n">guide</span><span class="p">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'>    <span class="bp">UIView</span> <span class="o">*</span><span class="n">relatedToItem</span> <span class="o">=</span> <span class="n">visiableItems</span><span class="p">[</span><span class="n">idx</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSLayoutAttribute</span> <span class="n">minGapAttribute</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">minAttributeForGapConstraint</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSLayoutAttribute</span> <span class="n">minContentAttribute</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSLayoutAttribute</span> <span class="n">maxContentAttribute</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">distribution</span> <span class="o">==</span> <span class="n">UIStackViewDistributionEqualCentering</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">minContentAttribute</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">axis</span> <span class="o">==</span> <span class="n">UILayoutConstraintAxisHorizontal</span> <span class="o">?</span> <span class="nl">NSLayoutAttributeCenterX</span> <span class="p">:</span> <span class="n">NSLayoutAttributeCenterY</span><span class="p">;</span>
</span><span class='line'>        <span class="n">maxContentAttribute</span> <span class="o">=</span> <span class="n">minContentAttribute</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">minContentAttribute</span> <span class="o">=</span> <span class="n">minGapAttribute</span><span class="p">;</span>
</span><span class='line'>        <span class="n">maxContentAttribute</span> <span class="o">=</span> <span class="n">minGapAttribute</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">beginGap</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="n">guide</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">minGapAttribute</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">NSLayoutRelationEqual</span> <span class="nl">toItem</span><span class="p">:</span><span class="n">item</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">maxContentAttribute</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="n">beginGap</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-distributing-edge&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">endGap</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="n">relatedToItem</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">minContentAttribute</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">NSLayoutRelationEqual</span> <span class="nl">toItem</span><span class="p">:</span><span class="n">guide</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">minGapAttribute</span> <span class="o">+</span> <span class="mi">1</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="n">endGap</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-distributing-edge&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">beginGap</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">endGap</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">spacingOrCenteringGuides</span> <span class="nl">setObject</span><span class="p">:</span><span class="n">guide</span> <span class="nl">forKey</span><span class="p">:</span><span class="n">item</span><span class="p">];</span>
</span><span class='line'><span class="p">}];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">resetSpacingOrCenteringGuideRelatedDimensionConstraints</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">removeConstraints</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">relatedDimensionConstraints</span><span class="p">.</span><span class="n">fd_allObjects</span><span class="p">];</span>
</span><span class='line'>  <span class="bp">NSArray</span><span class="o">&lt;</span><span class="bp">UIView</span> <span class="o">*&gt;</span> <span class="o">*</span><span class="n">visiableItems</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">visiableItems</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">visiableItems</span><span class="p">.</span><span class="n">count</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">1</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="n">FDGapLayoutGuide</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">firstGapGuide</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">spacingOrCenteringGuides</span> <span class="nl">objectForKey</span><span class="p">:</span><span class="n">visiableItems</span><span class="p">.</span><span class="n">car</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">spacingOrCenteringGuides</span><span class="p">.</span><span class="n">fd_allObjects</span> <span class="nl">enumerateObjectsUsingBlock</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="bp">UIView</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">obj</span><span class="p">,</span> <span class="bp">NSUInteger</span> <span class="n">idx</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">stop</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">firstGapGuide</span> <span class="o">==</span> <span class="n">obj</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
</span><span class='line'>      <span class="n">NSLayoutAttribute</span> <span class="n">dimensionAttribute</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="n">dimensionAttributeForCurrentAxis</span><span class="p">];</span>
</span><span class='line'>      <span class="bp">NSLayoutConstraint</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">related</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="n">firstGapGuide</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">dimensionAttribute</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">NSLayoutRelationEqual</span> <span class="nl">toItem</span><span class="p">:</span><span class="n">obj</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">dimensionAttribute</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>      <span class="n">related</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="p">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">FDSV</span><span class="o">-</span><span class="n">fill</span><span class="o">-</span><span class="n">equally</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;;</span>
</span><span class='line'>      <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">relatedDimensionConstraints</span> <span class="nl">setObject</span><span class="p">:</span><span class="n">related</span> <span class="nl">forKey</span><span class="p">:</span><span class="n">obj</span><span class="p">];</span>
</span><span class='line'>      <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">related</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p></li>
</ul>


<p>先创建<code>spacingOrCenteringGuides</code>，开始是干掉旧的<code>spacingOrCenteringGuides</code>。这里使用的仍然是<strong>visiableItems</strong>。
<code>FDGapLayoutGuide</code>用来连接左右相连的两个可见<code>arrangedSubview</code>。</p>

<p>这两个<code>distribution</code>不同的地方就是<code>UIStackViewDistributionEqualSpacing</code>的<code>FDGapLayoutGuide</code>连接的是<code>arrangedSubview</code>的<code>minAttribute</code>和<code>maxAttribute</code>，而<code>UIStackViewDistributionEqualCentering</code>的<code>FDGapLayoutGuide</code>连接的却是<code>arrangedSubview</code>的<code>centerAttribute</code>。</p>

<p>接下来就是创建<code>relatedDimensionConstraints</code>，就是根据<code>axis</code>不同给对应的<code>dimensionAttribute</code>创建相等的约束即可，这些约束是作用在<code>FDGapLayoutGuide</code>上的，而与前面那两种<code>distribution</code>类型不同。这就是一开始说的<code>relatedDimensionConstraints</code>中的两种类型的约束。</p>

<p>到此整个<code>distribution</code>方向的约束也都创建完了。加上<code>alignment</code>方向创建的约束，<code>StackView</code>已经可以使用了。</p>

<hr />

<p>介绍完这些再回过头来看<a href="http://blog.wtlucky.com/blog/2015/10/09/fdstackview-downward-compatible-uistackview-part-1/">本文章<code>Part 1</code></a>中后面提到的<code>UIStackView</code>的第一个bug，当存在spacing的时候<code>UIStackViewDistributionFillProportionally</code>这个类型的<code>StackView</code>是烂掉的。我刚才看了一下，苹果仍然没有修复这个bug。</p>

<p>具体的原因那篇文章中已经解释了，现在说下为什么<code>FDStackView</code>没有这个问题，相信看完前面创建约束的过程，读者朋友应该就能发现我们并没有像<code>UIStackView</code>那样将<code>canvas</code>的<code>dimensionAttribute</code>乘以一个系数作为<code>arrangedSubview</code>的<code>dimensionConstraint</code>。我们的<code>arrangedSubview</code>的<code>dimensionConstraint</code>是与<code>canvas</code>无关的，是<code>arrangedSubviews</code>之间的比例关系，而且spacing在之前的<code>edgeToEdgeConstraints</code>中就已经创建了，这两者是分开创建的，所以算法不同，自然也就不会出现这个bug。</p>

<hr />

<p>下面看其余的知识点：</p>

<h3>子视图的隐藏显示如何处理</h3>

<p>如果一个已经布好局的<code>StackView</code>，在一个<code>arrangedSubview</code>被<code>hidden</code>或者<code>show</code>之后，那么其余的<code>arrangedSubviews</code>也要做出相应变化，来相应这种变化。</p>

<p>在<code>FDStackView</code>这里我们是通过<code>KVO</code>监测每一个<code>arrangedSubview</code>的<code>hidden</code>属性，当任何一个<code>arrangedSubview</code>属性发生变化后，我们就通过<code>rebuild</code>的方式重新创建整个<code>StackView</code>的约束，就是重新布局一遍。这是目前<code>1.0</code>版本的处理方式，这样势必会带来性能的损失，这也是我们后续优化性能的关键。</p>

<h3>子视图的<code>intrinsicContentSize</code>发生变化时如何处理</h3>

<p>什么叫子视图的<code>intrinsicContentSize</code>发生变化呢？举个例子，一个已经布好局的<code>StackView</code>，其中有一个<code>arrangedSubview</code>是一个<code>UILabel</code>，但是这个<code>UILabel</code>被重新<code>setText</code>了，那么它的<code>intrinsicContentSize</code>就会发生变化，自然<code>StackView</code>的布局如果不发生变化的话就是错误的。所以在这种情况下<code>StackView</code>也要做出处理。</p>

<p>这里我们研究了<code>UIStackView</code>的实现方式，一个<code>arrangedSubview</code>的<code>intrinsicContentSize</code>发生变化如何被捕捉到，是我们未知的，<code>UIKit</code>并没有暴露任何方法给我们，我们只能通过下符号断点的方式给dump出来的<code>UIStackView</code>的私有类。</p>

<p>研究发现当一个<code>arrangedSubview</code>的<code>intrinsicContentSize</code>发生变化时，<code>UIStackView</code>总会调用到<code>_intrinsicContentSizeInvalidatedForChildView:</code>这个私有方法，参数为发生变化的<code>arrangedSubview</code>。所以我们就把这一私有方法给替换了，借助<code>UIKit</code>内部的机制来帮我们通知一个<code>arrangedSubview</code>的<code>intrinsicContentSize</code>发生变化的这种情况。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// Use non-public API in UIView directly is dangerous, so we inject at runtime.</span>
</span><span class='line'><span class="p">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">load</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="kt">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="kt">SEL</span> <span class="n">selector</span> <span class="o">=</span> <span class="n">NSSelectorFromString</span><span class="p">(@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="nl">_intrinsicContentSizeInvalidatedForChildView</span><span class="p">:</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;);</span>
</span><span class='line'>        <span class="n">Method</span> <span class="n">method</span> <span class="o">=</span> <span class="n">class_getInstanceMethod</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="k">@selector</span><span class="p">(</span><span class="nl">intrinsicContentSizeInvalidatedForChildView</span><span class="p">:));</span>
</span><span class='line'>        <span class="n">class_addMethod</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="n">selector</span><span class="p">,</span> <span class="n">method_getImplementation</span><span class="p">(</span><span class="n">method</span><span class="p">),</span> <span class="n">method_getTypeEncoding</span><span class="p">(</span><span class="n">method</span><span class="p">));</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>接到这种通知之后，我们目前也是通过<code>rebuild</code>的方式来重建<code>StackView</code>的约束的。其实对于这种情况以及上面提到的<code>hidden</code>的情况，我们都能得到具体发生变化的那个<code>arrangedSubview</code>，这也将会是后续优化的突破口。</p>

<hr />

<p>到此整个<code>FDStackView</code>的设计实现过程都介绍完了，当然还有一些零零碎碎的点没有说，都在源码里了。后续版本会增加<code>Layout Margins</code>的支持，以及性能优化。</p>

<p>最后在附一张<code>UIStackView</code>及<code>FDStackView</code>在不同<code>iOS</code>系统上加载运行图：</p>

<p><img src="https://oac67o3cg.qnssl.com/1475116763.png" alt="" /></p>

<p>全文完，转载请注明出处，谢谢阅读。</p>

<p>————————————</p>

<p><img src="https://oac67o3cg.qnssl.com/1475114982.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FDStackView —— Downward Compatible UIStackView (Part 2)]]></title>
    <link href="http://blog.wtlucky.com/blog/2016/01/19/fdstackview-downward-compatible-uistackview-part-2/"/>
    <updated>2016-01-19T14:44:53+08:00</updated>
    <id>http://blog.wtlucky.com/blog/2016/01/19/fdstackview-downward-compatible-uistackview-part-2</id>
    <content type="html"><![CDATA[<p>写完了<code>Part 1</code>就被接踵而至的新项目和新版本忙的不可开交，转眼间一个季度就已经过去了，而这篇<code>Part 2</code>却迟迟还没有出现。实在是抱歉没有及时更新。不过有一个好消息就是<code>FDStackView</code>已经被使用在我们自己的项目中，并且我们的项目也已经经过了两个版本的迭代，<code>FDStackView</code>可以说还是相当稳定的，并且可以顺利的通过苹果的审核机制，对这方面有顾虑的小伙伴们可以放心大胆的使用了。同时我们也将它的版本号从<code>1.0-alpha</code>升级到<code>1.0</code>。在此感谢一下各位热心的小伙伴们在<code>Github</code>上提出的<code>issue</code>,以及着重感谢下<a href="http://weibo.com/ljc1986?is_all=1">@里脊串</a>对<code>FDStackView</code>的重度使用及提出的各种隐晦的<code>bug</code>。后续我们将会对性能的优化做出改进，以及对<code>Layout Margins</code>的支持。</p>

<p>回到主题，这篇文章主要介绍<code>StackView</code>的实现，即如何通过现有<code>AutoLayout</code>技术实现<code>StackView</code>这样的一个控件。这里说明一下，当初我们编写<code>FDStackView</code>的时候，<code>UIStackView</code>还没有支持<code>Layout Margins</code>，所以我们也没有添加<code>Layout Margins</code>的支持，不过目前的<code>iOS SDK</code>已经增加了这一部分的支持，所以在打开<code>layoutMarginsRelativeArrangement</code>属性的情况下，<code>StackView</code>创建出的约束会与我后面所介绍的内容有一些出入，不过问题不大，仅仅是部分约束的<code>firstItem</code>由<code>StackView</code>本身变成<code>UILayoutGuide</code>的区别。</p>

<p> 实现<code>StackView</code>主要包括这几个技术点：</p>

<ul>
<li><strong><code>alignment</code>和<code>distribution</code>的约束如何添加和管理；</strong></li>
<li><strong><code>spacing</code>和<code>distribution</code>的关系及约束的创建；</strong></li>
<li><strong>子视图的隐藏显示如何处理；</strong></li>
<li><strong>子视图的<code>intrinsicContentSize</code>发生变化时如何处理。</strong></li>
</ul>


<!-- More -->


<blockquote><p>我们对<code>UIStackView</code>进行了详细的研究，包括<code>dump</code>出所有<code>UIStackView</code>的相关私有类，各个类的方法，实例变量等。还需要添加符号断点来跟踪各个方法的调用顺序及各个实例变量的值得变化情况。同时还需要分析各个状态下<code>UIStackView</code>的约束<code>constraints</code>的情况，包括约束的个数，连接的方式，及约束所添加到的视图等。经过以上的各种分析之后，我们又通过在<code>IB</code>中借助<code>UIView</code>手动连接约束的方式，连出每一个<code>UIStackView</code>所对应的状态。经过这一番调查与研究我们已经大概摸清的<code>UIStackView</code>的工作原理与实现方式。</p></blockquote>

<p>如上篇文章所说，在进行了详尽的研究之后，总结出大概需要攻克的是这几个技术点，以尽可能的与<code>UIStackView</code>的实现保持一致，在难以完成的地方通过自己的方式实现。在这之前先介绍一下我们使用到的几个私有类。</p>

<h5><code>CATransformLayer</code></h5>

<p><code>StackView</code>是一个透明不可见的容器，主要就是因为这个<code>layer</code>，我们继承了它并重载了两个方法，<code>setOpaque:</code>和<code>setOpaque:</code>，用于避免产生警告⚠️。也就是项目中的<code>FDTransformLayer</code>。</p>

<h5><code>_UILayoutSpacer</code></h5>

<p>这是一个私有类，它的主要作用是用了辅助<code>StackView</code>创建<code>alignment</code>方向上的约束，它的父类是<code>UILayoutGuide</code>，并不是一个UIView的子类，所以我们并不能以熟悉的方式对它添加约束。但是在知道了它的作用之后，我们完全可以使用一个<code>UIView</code>来代替它，同时它也是不可见的，所以它的<code>layer</code>自然也是<code>FDTransformLayer</code>。这是项目中的<code>FDLayoutSpacer</code>。</p>

<h5><code>_UIOLAGapGuide</code></h5>

<p>与<code>_UILayoutSpacer</code>相同是<code>UILayoutGuide</code>的子类，用来辅助<code>distribution</code>方向上的约束创建，并且只有<code>UIStackViewDistributionEqualSpacing</code>和<code>UIStackViewDistributionEqualCentering</code>两种模式下它才会出现。在项目中我们通过<code>UIView</code>的子类<code>FDGapLayoutGuide</code>来实现它。</p>

<h5><code>_UILayoutArrangement</code></h5>

<p>同样是一个私有类，用来管理<code>StackView</code>及其子视图的约束的创建。它是一个父类，在<code>FDStackView</code>中我们使用<code>FDStackViewLayoutArrangement</code>来与之对应。</p>

<h5><code>_UIAlignedLayoutArrangement</code></h5>

<p>该类是<code>_UILayoutArrangement</code>的子类，用来控制<code>alignment</code>方向上的约束的创建及管理，它维护了一个<code>_UILayoutSpacer</code>并负责它的生命周期。在<code>FDStackView</code>中我们以更直接的<code>FDStackViewAlignmentLayoutArrangement</code>来对它命名。</p>

<h5><code>_UIOrderedLayoutArrangement</code></h5>

<p>与<code>_UIAlignedLayoutArrangement</code>相对，用来控制<code>distribution</code>方向上的约束创建及管理，它维护了一组<code>_UIOLAGapGuide</code>。在<code>FDStackView</code>中我们以更直接的<code>FDStackViewDistributionLayoutArrangement</code>来对它命名。</p>

<p>先提前解释几个后面会提到的名词：</p>

<ul>
<li><code>canvas</code> ：<code>canvas</code>是什么？翻译过来是画布的意思，其实就是容器也就是<code>StackView</code>本身</li>
<li><code>Ambiguity Suppression</code> ：经常<code>Debug``AutoLayout</code>的同学可能对这个词并木陌生，一般约束产生冲突或者模棱两可的时候，控制台就会输出一组信息，其中就会包含这个词。这里就是抵制模棱两可的约束的意思。<code>StackView</code>中会创建一些低优先级的约束来完成这件事儿，以防止控制台打出<code>AutoLayout</code>异常的<code>log</code>。</li>
<li><code>minAttribute</code> ：是<code>NSLayoutAttribute</code>一个便捷获取方式，针对不同的<code>axis</code>会对应不同的<code>NSLayoutAttribute</code>，可能是<code>NSLayoutAttributeTop</code>也可能是<code>NSLayoutAttributeLeading</code>。</li>
<li><code>centerAttribute</code> :同样针对不同的<code>axis</code>可能是<code>NSLayoutAttributeCenterY</code>或者<code>NSLayoutAttributeCenterX</code>。</li>
<li><code>maxAttribute</code> :同样针对不同的<code>axis</code>可能是<code>NSLayoutAttributeBottom</code>或者<code>NSLayoutAttributeTrailing</code>。</li>
<li><code>dimensionAttribute</code> :同样针对不同的<code>axis</code>可能是<code>NSLayoutAttributeHeight</code>或者<code>NSLayoutAttributeWidth</code>。</li>
</ul>


<p><figure class='code'><figcaption><span>FDStackViewAlignmentLayoutArrangement </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="n">NSLayoutAttribute</span><span class="p">)</span><span class="nf">minAttributeForCanvasConnections</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">self</span><span class="p">.</span><span class="n">axis</span> <span class="o">==</span> <span class="n">UILayoutConstraintAxisHorizontal</span> <span class="o">?</span> <span class="nl">NSLayoutAttributeTop</span> <span class="p">:</span> <span class="n">NSLayoutAttributeLeading</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="n">NSLayoutAttribute</span><span class="p">)</span><span class="n">centerAttributeForCanvasConnections</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">self</span><span class="p">.</span><span class="n">axis</span> <span class="o">==</span> <span class="n">UILayoutConstraintAxisHorizontal</span> <span class="o">?</span> <span class="nl">NSLayoutAttributeCenterY</span> <span class="p">:</span> <span class="n">NSLayoutAttributeCenterX</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="n">NSLayoutAttribute</span><span class="p">)</span><span class="n">maxAttributeForCanvasConnections</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">self</span><span class="p">.</span><span class="n">axis</span> <span class="o">==</span> <span class="n">UILayoutConstraintAxisHorizontal</span> <span class="o">?</span> <span class="nl">NSLayoutAttributeBottom</span> <span class="p">:</span> <span class="n">NSLayoutAttributeTrailing</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="n">NSLayoutAttribute</span><span class="p">)</span><span class="n">dimensionAttributeForCurrentAxis</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">self</span><span class="p">.</span><span class="n">axis</span> <span class="o">==</span> <span class="n">UILayoutConstraintAxisHorizontal</span> <span class="o">?</span> <span class="nl">NSLayoutAttributeHeight</span> <span class="p">:</span> <span class="n">NSLayoutAttributeWidth</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p></li>
</ul>


<p><figure class='code'><figcaption><span>FDStackViewAlignmentLayoutArrangement </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="n">NSLayoutAttribute</span><span class="p">)</span><span class="nf">minAttributeForCanvasConnections</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">self</span><span class="p">.</span><span class="n">axis</span> <span class="o">==</span> <span class="n">UILayoutConstraintAxisHorizontal</span> <span class="o">?</span> <span class="nl">NSLayoutAttributeLeading</span> <span class="p">:</span> <span class="n">NSLayoutAttributeTop</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="n">NSLayoutAttribute</span><span class="p">)</span><span class="n">centerAttributeForCanvasConnections</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nb">self</span><span class="p">.</span><span class="n">axis</span> <span class="o">==</span> <span class="n">UILayoutConstraintAxisHorizontal</span> <span class="o">?</span> <span class="nl">NSLayoutAttributeCenterY</span> <span class="p">:</span> <span class="n">NSLayoutAttributeCenterX</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="n">NSLayoutAttribute</span><span class="p">)</span><span class="n">dimensionAttributeForCurrentAxis</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nb">self</span><span class="p">.</span><span class="n">axis</span> <span class="o">==</span> <span class="n">UILayoutConstraintAxisHorizontal</span> <span class="o">?</span> <span class="nl">NSLayoutAttributeWidth</span> <span class="p">:</span> <span class="n">NSLayoutAttributeHeight</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="n">NSLayoutAttribute</span><span class="p">)</span><span class="n">minAttributeForGapConstraint</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">self</span><span class="p">.</span><span class="n">axis</span> <span class="o">==</span> <span class="n">UILayoutConstraintAxisHorizontal</span> <span class="o">?</span> <span class="nl">NSLayoutAttributeLeading</span> <span class="p">:</span> <span class="n">NSLayoutAttributeTop</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p></li>
</ul>


<p>此外<code>UIStackView</code>的约束的管理方式也十分的奇妙。除了一个例外的<code>Ambiguity Suppression</code>的约束，其余不管约束何种关系的约束都是add在<code>canvas</code>上的。既然约束都加在了<code>canvas</code>上，那这么多的约束如何区分何管理呢？</p>

<p>这里有个小技巧，那就是用<code>weakToWeak</code>的<code>NSMapTable</code>来管理，<code>key</code>是约束的<code>firstItem</code>,<code>value</code>是约束，而且因为<code>NSMapTable</code>是<code>weakToWeak</code>的，所以<code>key</code>和<code>value</code>所对应的<code>object</code>并不会增加引用计数，不会带来内存上的管理困难。若要找一个<code>view</code>所关联约束，直接取<code>view</code>作为<code>key</code>的<code>value</code>就可以了。<code>_UILayoutArrangement</code>维护了多个这样的<code>NSMapTable</code>，分别来管理不同作用的约束。不得不说这样的设计真的是太巧妙了。</p>

<hr />

<h3><code>alignment</code>和<code>distribution</code>的约束如何添加和管理</h3>

<p>先给一张图看一下什么是<code>alignment</code>和<code>distribution</code>以及<code>Spacing</code>:</p>

<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/uistack_hero_2x_04e50947-5aa0-4403-825b-26ba4c1662bd.png" alt="image" /></p>

<p>在介绍实现之前，我先介绍一下<code>StackView</code>的各种<code>alignment</code>模式都是什么效果的：</p>

<ul>
<li><strong>UIStackViewAlignmentFill</strong>：这种就是填充满整个<code>StackView</code>了，用得比较多。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/align_fill_2x_8d71867d-e6cf-4063-b337-17dbc815c16e.png" alt="image" /></p>

<ul>
<li><strong>UIStackViewAlignmentLeading</strong>：这种是左对齐。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/align_leading_2x_bd31ee78-682d-4e36-990e-d655505fdc95.png" alt="image" /></p>

<ul>
<li><strong>UIStackViewAlignmentTop</strong>：这种是上部对齐。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/align_top_2x_bfa21a2d-1678-4b11-aa80-0750a4534bfc.png" alt="image" /></p>

<ul>
<li><strong>UIStackViewAlignmentFirstBaseline</strong>：这种是让<code>arrangedSubviews</code>按照<code>firstBaseline</code>对齐。只能出现在水平的<code>StackView</code>中。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/align_firstbaseline_2x_8b939a0f-5296-45d2-836c-aa05b4432e12.png" alt="image" /></p>

<ul>
<li><strong>UIStackViewAlignmentCenter</strong>：这种是居中对齐。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/align_center_2x_a34c8513-6f32-4cac-8149-4e4c1d206a3a.png" alt="image" /></p>

<ul>
<li><strong>UIStackViewAlignmentTrailing</strong>：这种是右部对齐。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/align_leading_2_2x_61cdf9c4-2a5b-4a3e-9c13-b0f1fa6bf348.png" alt="image" /></p>

<ul>
<li><strong>UIStackViewAlignmentBottom</strong>：这种是底部对齐。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/align_bottom_2x_2dc738dd-2d3a-4f7b-baee-aa283fe41e9f.png" alt="image" /></p>

<ul>
<li><strong>UIStackViewAlignmentLastBaseline</strong>：这种是让<code>arrangedSubviews</code>按照<code>lastBaseline</code>对齐。同样只能出现在水平的<code>StackView</code>中。</li>
</ul>


<p><img src="https://docs-assets.developer.apple.com/published/82128953f6/align_lastbaseline_2x_82af7014-4e27-450d-9115-b058217de073.png" alt="image" /></p>

<p>下面介绍实现，首先是<code>alignment</code>方向，<code>alignment</code>方向的约束主要包括4种
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">FDStackViewAlignmentLayoutArrangement</span> : <span class="nc">FDStackViewLayoutArrangement</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">NSMutableArray</span><span class="o">&lt;</span><span class="bp">NSLayoutConstraint</span> <span class="o">*&gt;</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">canvasConnectionConstraints</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">NSMapTable</span><span class="o">&lt;</span><span class="bp">UIView</span> <span class="o">*</span><span class="p">,</span> <span class="bp">NSLayoutConstraint</span> <span class="o">*&gt;</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">hiddingDimensionConstraints</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">)</span> <span class="bp">NSMutableDictionary</span><span class="o">&lt;</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">,</span> <span class="bp">NSMapTable</span> <span class="o">*&gt;</span> <span class="o">*</span><span class="n">alignmentConstraints</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@interface</span> <span class="nc">FDLayoutSpacer</span> : <span class="bp">UIView</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">strong</span><span class="p">,</span> <span class="k">readonly</span><span class="p">)</span> <span class="bp">NSMutableArray</span><span class="o">&lt;</span><span class="bp">NSLayoutConstraint</span> <span class="o">*&gt;</span> <span class="o">*</span><span class="n">systemConstraints</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<ul>
<li><strong>canvasConnectionConstraints</strong>：它管理的是<code>arrangedSubviews</code>与<code>canvas</code>之间的约束；</li>
<li><strong>hiddingDimensionConstraints</strong>：它管理的是当<code>arrangedSubviews</code>有<code>hidden</code>的时候，该<code>arrangedSubview</code>的有关<code>dimensionAttribute</code>的约束；</li>
<li><strong>systemConstraints</strong>：它是由<code>_UILayoutSpacer</code>来管理的，它管理了spacer与<code>arrangedSubviews</code>之间的约束，因为这些约束的<code>firstItem</code>都是spacer自身，所以就不需要使用<code>NSMapTable</code>而直接是<code>NSArray</code>。另外spacer只有在<code>alignment</code>不是<code>UIStackViewAlignmentFill</code>的时候才会被创建，所以当<code>alignment</code>是<code>UIStackViewAlignmentFill</code>时，是没有<code>systemConstraints的</code>；</li>
<li><strong>alignmentConstraints</strong>：它管理的是<code>arrangedSubviews</code>之间的约束，它包括两组<code>NSMapTable</code>，根据<code>alignment</code>的不同具体的约束也不同，具体的<code>NSMapTable</code>的<code>key</code>与<code>alignment</code>及<code>axis</code>的关系如下表：</li>
</ul>


<p><img src="https://oac67o3cg.qnssl.com/1475116676.png" alt="" /></p>

<p>可以看到除了<code>UIStackViewAlignmentFill</code>模式以外，都会有一个<code>Ambiguity Suppression</code>的key，这个key对应的<code>NSMapTable</code>的就管理了前面提到的那些低优先级防止布局时出现模棱两可状态的约束。此外<code>Baseline</code>相关的约束是只有在<code>axis</code>为<code>Horizontal</code>时才会有的，并且<code>UIStackViewAlignmentFirstBaseline</code>和<code>UIStackViewAlignmentTop</code>，<code>UIStackViewAlignmentLastBaseline</code>和<code>UIStackViewAlignmentBottom</code>的key值是相同的。</p>

<p>这个key的名字之所以这么取也是有讲究的，它代表着它所对应的<code>NSMapTable</code>管理的约束关系。举个例子：<code>axis</code>为<code>Horizontal</code>，<code>alignment</code>为<code>UIStackViewAlignmentFill</code>时，key为<code>Top</code>和<code>Bottom</code>，那么<code>Top</code>对应的<code>NSMapTable</code>管理的约束就是<code>arrangedSubviews</code>之间<code>NSLayoutAttributeTop</code>相等的约束。同理<code>Bottom</code>就是<code>NSLayoutAttributeBottom</code>相等的约束。</p>

<p>这样结合<code>alignment</code>的效果来看就很容易理解，<code>UIStackViewAlignmentFill</code>模式需要<code>arrangedSubviews</code>都充满容器，那么自然他们的<code>NSLayoutAttributeTop</code>和<code>NSLayoutAttributeBottom</code>需要都相等，而<code>UIStackViewAlignmentTop</code>模式需要<code>top</code>对齐那么只需要<code>NSLayoutAttributeTop</code>相等就OK了。</p>

<p>这里还有一个点就是<code>arrangedSubviews</code>之间的约束不是迭代添加的，而是都与第一个<code>arrangedSubview</code>创建关系。假设有3个<code>view</code>，那就是<code>view2</code>与<code>view1</code>建立约束，<code>view3</code>同样与<code>view1</code>建立约束而不是与<code>view2</code>迭代建立约束。</p>

<p>这4种约束的创建顺序是：</p>

<ol>
<li><code>FDLayoutSpacer的systemConstraints</code></li>
<li><code>canvasConnectionConstraints</code></li>
<li><code>alignmentConstraints</code></li>
<li><code>hiddingDimensionConstraints</code></li>
</ol>


<p><code>FDLayoutSpacer的systemConstraints</code>在<code>FDStackViewAlignmentLayoutArrangement</code>中被称为<code>spanningLayoutGuideConstraints</code>，创建方法是
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">updateSpanningLayoutGuideConstraintsIfNecessary</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">mutableItems</span><span class="p">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">spanningLayoutGuide</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="nb">self</span><span class="p">.</span><span class="n">spanningGuideConstraintsNeedUpdate</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">removeConstraints</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">spanningLayoutGuide</span><span class="p">.</span><span class="n">systemConstraints</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">spanningLayoutGuide</span><span class="p">.</span><span class="n">systemConstraints</span> <span class="n">removeAllObjects</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//FDSV-spanning-fit</span>
</span><span class='line'>    <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">constraint</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">spanningLayoutGuide</span> <span class="nl">attribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">spanningLayoutGuide</span><span class="p">.</span><span class="n">isHorizontal</span> <span class="o">?</span> <span class="nl">NSLayoutAttributeWidth</span> <span class="p">:</span> <span class="n">NSLayoutAttributeHeight</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">NSLayoutRelationEqual</span> <span class="nl">toItem</span><span class="p">:</span><span class="nb">nil</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">NSLayoutAttributeNotAnAttribute</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="n">constraint</span><span class="p">.</span><span class="n">priority</span> <span class="o">=</span> <span class="mi">51</span><span class="p">;</span>
</span><span class='line'>    <span class="n">constraint</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-spanning-fit&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">constraint</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">spanningLayoutGuide</span><span class="p">.</span><span class="n">systemConstraints</span> <span class="nl">addObject</span><span class="p">:</span><span class="n">constraint</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//FDSV-spanning-boundary</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">mutableItems</span> <span class="nl">enumerateObjectsUsingBlock</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="n">item</span><span class="p">,</span> <span class="bp">NSUInteger</span> <span class="n">idx</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="o">*</span><span class="n">stop</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">minConstraint</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">spanningLayoutGuide</span> <span class="nl">attribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">minAttributeForCanvasConnections</span> <span class="nl">relatedBy</span><span class="p">:[</span><span class="nb">self</span> <span class="nl">layoutRelationForItemConnectionForAttribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">minAttributeForCanvasConnections</span><span class="p">]</span> <span class="nl">toItem</span><span class="p">:</span><span class="n">item</span> <span class="nl">attribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">minAttributeForCanvasConnections</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>        <span class="n">minConstraint</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-spanning-boundary&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="n">minConstraint</span><span class="p">.</span><span class="n">priority</span> <span class="o">=</span> <span class="mf">999.5</span><span class="p">;</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">minConstraint</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">spanningLayoutGuide</span><span class="p">.</span><span class="n">systemConstraints</span> <span class="nl">addObject</span><span class="p">:</span><span class="n">minConstraint</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">maxConstraint</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">spanningLayoutGuide</span> <span class="nl">attribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">maxAttributeForCanvasConnections</span> <span class="nl">relatedBy</span><span class="p">:[</span><span class="nb">self</span> <span class="nl">layoutRelationForItemConnectionForAttribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">maxAttributeForCanvasConnections</span><span class="p">]</span> <span class="nl">toItem</span><span class="p">:</span><span class="n">item</span> <span class="nl">attribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">maxAttributeForCanvasConnections</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>        <span class="n">maxConstraint</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-spanning-boundary&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="n">maxConstraint</span><span class="p">.</span><span class="n">priority</span> <span class="o">=</span> <span class="mf">999.5</span><span class="p">;</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">maxConstraint</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">spanningLayoutGuide</span><span class="p">.</span><span class="n">systemConstraints</span> <span class="nl">addObject</span><span class="p">:</span><span class="n">maxConstraint</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>首先判断一些不需要创建或者不需要更新这组约束的情况，比如之前提到的<code>alignment</code>为<code>UIStackViewAlignmentFill</code>或者没有<code>arrangedSubview</code>的时候。接下来创建一个宽或高为<code>0</code>的约束给spacer，因为对于后面添加的约束而言，spacer是缺少这样的一个约束以保证它能够正确布局。最后就是把每一个<code>arrangedSubview</code>与spacer分别建立<code>minAttribute</code>和<code>maxAttribute</code>的约束，这些约束的<code>constant</code>都是<code>0</code>，但是关系却不一定都是等于，需要根据<code>alignment</code>的属性不同来动态调整，有可能是大于等于，也有可能是小于等于。这需要查表来得到。</p>

<p>下一步创建<code>canvasConnectionConstraints</code>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">updateCanvasConnectionConstraintsIfNecessary</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">mutableItems</span><span class="p">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">removeConstraints</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">canvasConnectionConstraints</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvasConnectionConstraints</span> <span class="n">removeAllObjects</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="bp">NSArray</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="bp">NSNumber</span> <span class="o">*&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="o">*</span><span class="n">canvasAttributes</span> <span class="o">=</span> <span class="l">@[@(</span><span class="nb">self</span><span class="p">.</span><span class="n">minAttributeForCanvasConnections</span><span class="l">)</span><span class="p">,</span> <span class="l">@(</span><span class="nb">self</span><span class="p">.</span><span class="n">maxAttributeForCanvasConnections</span><span class="l">)]</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">alignment</span> <span class="o">==</span> <span class="n">UIStackViewAlignmentCenter</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">canvasAttributes</span> <span class="o">=</span> <span class="p">[</span><span class="n">canvasAttributes</span> <span class="nl">arrayByAddingObject</span><span class="p">:</span><span class="l">@(</span><span class="nb">self</span><span class="p">.</span><span class="n">centerAttributeForCanvasConnections</span><span class="l">)</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">isBaselineAlignment</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">canvasFitConstraint</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">NSLayoutAttributeHeight</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">NSLayoutRelationEqual</span> <span class="nl">toItem</span><span class="p">:</span><span class="nb">nil</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">NSLayoutAttributeNotAnAttribute</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="n">canvasFitConstraint</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-canvas-fit&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">canvasFitConstraint</span><span class="p">.</span><span class="n">priority</span> <span class="o">=</span> <span class="mi">49</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">canvasFitConstraint</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvasConnectionConstraints</span> <span class="nl">addObject</span><span class="p">:</span><span class="n">canvasFitConstraint</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">canvasAttributes</span> <span class="nl">enumerateObjectsUsingBlock</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="bp">NSNumber</span> <span class="o">*</span><span class="n">canvasAttribute</span><span class="p">,</span> <span class="bp">NSUInteger</span> <span class="n">idx</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="o">*</span><span class="n">stop</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLayoutAttribute</span> <span class="n">attribute</span> <span class="o">=</span> <span class="n">canvasAttribute</span><span class="p">.</span><span class="n">integerValue</span><span class="p">;</span>
</span><span class='line'>    <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">constraint</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:[</span><span class="nb">self</span> <span class="nl">viewOrGuideForLocationAttribute</span><span class="p">:</span><span class="n">attribute</span><span class="p">]</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">attribute</span> <span class="nl">relatedBy</span><span class="p">:[</span><span class="nb">self</span> <span class="nl">layoutRelationForCanvasConnectionForAttribute</span><span class="p">:</span><span class="n">attribute</span><span class="p">]</span> <span class="nl">toItem</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">attribute</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="n">constraint</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-canvas-connection&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">constraint</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvasConnectionConstraints</span> <span class="nl">addObject</span><span class="p">:</span><span class="n">constraint</span><span class="p">];</span>
</span><span class='line'><span class="p">}];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>因为这是<code>alignment</code>的<code>canvasConnectionConstraints</code>，所以只需关注它自己的<code>minAttribute</code>和<code>maxAttribute</code>两个方向与<code>canvas</code>的约束即可，其余两个方向会在<code>distributionLayoutArrangement</code>中创建。</p>

<p>特别的是如果<code>alignment</code>是<code>UIStackViewAlignmentCenter</code>的话需要加上一个<code>centerAttribute</code>的约束。如果是<code>alignment</code>是<code>baseline</code>相关的话还要给<code>canvas</code>添加一个高为<code>0</code>的低优先级约束，用来满足某些特殊情况下<code>canvas</code>约束不满足的情况。</p>

<p>具体与<code>canvas</code>建立约束关系的<code>firstItem</code>及<code>relation</code>关系是根据<code>alignment</code>类型以及<code>NSLayoutAttribute</code>的不同而不同的，情况比较多我就不一一列举了，同样是根据查表得到，具体可以看代码去查。</p>

<p>最后是<code>alignmentConstraints</code>和<code>hiddingDimensionConstraints</code>，虽然前面说它们两个的顺序是一前一后创建，但其实并不是，它们可以说是一起创建的，首先取出第一个<code>arrangedSubview</code>作为<code>guardView</code>，然后循环遍历其余<code>arrangedSubview</code>，先添加<code>alignmentConstraint</code>，如果这个<code>arrangedSubview</code>是<code>hidden</code>的那么就会再添加一个<code>hiddingDimensionConstraint</code>。
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">updateAlignmentItemsConstraintsIfNecessary</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">mutableItems</span><span class="p">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraints</span> <span class="nl">setObject</span><span class="p">:[</span><span class="bp">NSMapTable</span> <span class="n">weakToWeakObjectsMapTable</span><span class="p">]</span> <span class="nl">forKey</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraintsFirstKey</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraints</span> <span class="nl">setObject</span><span class="p">:[</span><span class="bp">NSMapTable</span> <span class="n">weakToWeakObjectsMapTable</span><span class="p">]</span> <span class="nl">forKey</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraintsSecondKey</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">removeConstraints</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">hiddingDimensionConstraints</span><span class="p">.</span><span class="n">fd_allObjects</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">hiddingDimensionConstraints</span> <span class="n">removeAllObjects</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="bp">UIView</span> <span class="o">*</span><span class="n">guardView</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">mutableItems</span><span class="p">.</span><span class="n">firstObject</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">mutableItems</span> <span class="nl">enumerateObjectsUsingBlock</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="n">item</span><span class="p">,</span> <span class="bp">NSUInteger</span> <span class="n">idx</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="o">*</span><span class="n">stop</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">alignment</span> <span class="o">!=</span> <span class="n">UIStackViewAlignmentFill</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">ambiguitySuppressionConstraint</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="n">item</span> <span class="nl">attribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraintsFirstAttribute</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">NSLayoutRelationEqual</span> <span class="nl">toItem</span><span class="p">:</span><span class="nb">nil</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">NSLayoutAttributeNotAnAttribute</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>        <span class="n">ambiguitySuppressionConstraint</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-ambiguity-suppression&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="n">ambiguitySuppressionConstraint</span><span class="p">.</span><span class="n">priority</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
</span><span class='line'>        <span class="p">[</span><span class="n">item</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">ambiguitySuppressionConstraint</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraints</span><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraintsFirstKey</span><span class="p">]</span> <span class="nl">setObject</span><span class="p">:</span><span class="n">ambiguitySuppressionConstraint</span> <span class="nl">forKey</span><span class="p">:</span><span class="n">item</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">item</span> <span class="o">!=</span> <span class="n">guardView</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">firstConstraint</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="n">guardView</span> <span class="nl">attribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraintsFirstAttribute</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">NSLayoutRelationEqual</span> <span class="nl">toItem</span><span class="p">:</span><span class="n">item</span> <span class="nl">attribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraintsFirstAttribute</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>            <span class="n">firstConstraint</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-alignment&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">firstConstraint</span><span class="p">];</span>
</span><span class='line'>            <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraints</span><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraintsFirstKey</span><span class="p">]</span> <span class="nl">setObject</span><span class="p">:</span><span class="n">firstConstraint</span> <span class="nl">forKey</span><span class="p">:</span><span class="n">item</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">item</span> <span class="o">!=</span> <span class="n">guardView</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">secondConstraint</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="n">guardView</span> <span class="nl">attribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraintsSecondAttribute</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">NSLayoutRelationEqual</span> <span class="nl">toItem</span><span class="p">:</span><span class="n">item</span> <span class="nl">attribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraintsSecondAttribute</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>        <span class="n">secondConstraint</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-alignment&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">secondConstraint</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraints</span><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">alignmentConstraintsSecondKey</span><span class="p">]</span> <span class="nl">setObject</span><span class="p">:</span><span class="n">secondConstraint</span> <span class="nl">forKey</span><span class="p">:</span><span class="n">item</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">item</span><span class="p">.</span><span class="n">hidden</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="bp">NSLayoutConstraint</span> <span class="o">*</span><span class="n">hiddenConstraint</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSLayoutConstraint</span> <span class="nl">constraintWithItem</span><span class="p">:</span><span class="n">item</span> <span class="nl">attribute</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">axis</span> <span class="o">==</span> <span class="n">UILayoutConstraintAxisHorizontal</span> <span class="o">?</span> <span class="nl">NSLayoutAttributeHeight</span> <span class="p">:</span> <span class="n">NSLayoutAttributeWidth</span> <span class="nl">relatedBy</span><span class="p">:</span><span class="n">NSLayoutRelationEqual</span> <span class="nl">toItem</span><span class="p">:</span><span class="nb">nil</span> <span class="nl">attribute</span><span class="p">:</span><span class="n">NSLayoutAttributeNotAnAttribute</span> <span class="nl">multiplier</span><span class="p">:</span><span class="mi">1</span> <span class="nl">constant</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>        <span class="n">hiddenConstraint</span><span class="p">.</span><span class="n">priority</span> <span class="o">=</span> <span class="p">[</span><span class="n">item</span> <span class="nl">contentCompressionResistancePriorityForAxis</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">axis</span> <span class="o">==</span> <span class="n">UILayoutConstraintAxisHorizontal</span> <span class="o">?</span> <span class="nl">UILayoutConstraintAxisVertical</span> <span class="p">:</span> <span class="n">UILayoutConstraintAxisHorizontal</span><span class="p">];</span>
</span><span class='line'>        <span class="n">hiddenConstraint</span><span class="p">.</span><span class="n">identifier</span> <span class="o">=</span> <span class="s">@&quot;FDSV-hiding&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">canvas</span> <span class="nl">addConstraint</span><span class="p">:</span><span class="n">hiddenConstraint</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">hiddingDimensionConstraints</span> <span class="nl">setObject</span><span class="p">:</span><span class="n">hiddenConstraint</span> <span class="nl">forKey</span><span class="p">:</span><span class="n">item</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>这里的<code>alignmentConstraint</code>的创建都是<code>guardView</code>与其余的<code>arrangedSubview</code>创建<code>relation</code>关系为<strong>相等</strong>的约束，而<code>NSLayoutAttribute</code>的选择仍然是查表法，根据<code>axis</code>和<code>alignment</code>的不同而选择不同的<code>NSLayoutAttribute</code>。</p>

<p>如果<code>alignment</code>不是<code>UIStackViewAlignmentFill</code>模式的话，就会给<code>arrangedSubview</code>创建一个<code>dimensionAttribute</code>为<code>0</code>的低优先级约束，称为<code>ambiguitySuppressionConstraint</code>放在上图中<code>key</code>为<code>Ambiguity Suppression</code>的<code>NSMapTable</code>中。</p>

<hr />

<p>现在解释一下<a href="http://blog.wtlucky.com/blog/2015/10/09/fdstackview-downward-compatible-uistackview-part-1/">本文章<code>Part 1</code></a>中最后提到的<code>UIStackView</code>当<code>alignment</code>为<code>UIStackViewAlignmentFill</code>时，最高视图隐藏掉，而其余视图没有变成第二个的视图的高度的<code>bug</code>。原因就是在<code>UIStackView</code>的中实现中<code>AlignmentLayoutArrangement</code>是没有管理<code>hiddingDimensionConstraints</code>的，所以当视图被隐藏了后，那个视图被添加了一个宽为<code>0</code>的约束，视觉上看不到了，但是高方向的约束仍然存在，所以仍然会撑开<code>StackView</code>，所以在<code>FDStackView</code>中我们在<code>alignment</code>方向上同时增加了<code>hiddingDimensionConstraints</code>，视图被<code>hidden</code>后，会在高度方向上也给他加上一个高<code>0</code>为的约束，而且这个优先级也很有讲究需要跟它的<code>contentCompressionResistancePriority</code>设为一样，这样才不会在<code>AutoLayout</code>布局系统中当用户人为添加一个高度约束后产生冲突。</p>

<p>写了这么多，才写完第一个技术点的第一部分，内容确实比较多，我写的也比较乱，时间比较紧所以写作时间是间断的，所以思维也是间断跳跃的，还麻烦各位看官多多包涵。本来打算一篇写完的，但是这么长，还是有必要在分一下的，<code>Part 2</code>就到这吧，其余的内容就在<code>Part 3</code>吧。</p>

<p>————————————</p>

<p><img src="https://oac67o3cg.qnssl.com/1475114982.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FDStackView —— Downward Compatible UIStackView (Part 1)]]></title>
    <link href="http://blog.wtlucky.com/blog/2015/10/09/fdstackview-downward-compatible-uistackview-part-1/"/>
    <updated>2015-10-09T21:32:12+08:00</updated>
    <id>http://blog.wtlucky.com/blog/2015/10/09/fdstackview-downward-compatible-uistackview-part-1</id>
    <content type="html"><![CDATA[<p>加入百度知道团队也有一段时间了，能跟<a href="http://weibo.com/u/1364395395">@我就叫Sunny怎么了</a>、<a href="http://weibo.com/u/5665046845">@sinojerk</a>等小伙伴一起工作生活是一种极赞的体验。在完成日常业务开发之余，我们也会进行一些技术研究项目，并将研究结果以开源的方式公布出来，自然我也成为了<code>forkingdog</code>开源小组的一员。</p>

<p>近期我们的研究项目是<code>FDStackView</code>，现如今已经完成了<code>Alpha</code>版本的开发工作，并将其开源在了<code>Github</code>上，<a href="https://github.com/forkingdog/FDStackView">项目地址</a>。虽然现在已经完成所有的基本功能，但是仍需要在真实的环境中测试试用，欢迎大家将试用之后的问题反馈给我们，提<code>issue</code>给我们，使我们更好的修复和完善<code>FDStackView</code>，以便于更好的方便开发者们使用。</p>

<!-- More -->


<h2>Introduce</h2>

<p><code>FDStackView</code>究竟是什么呢？在介绍<code>FDStackView</code>之前，首先你需要知道<code>UIStackView</code>是什么？<code>UIStackView</code>是苹果在WWDC上发布<code>iOS9</code>的时候新推出的一个<code>UIKit</code>的视图，现在网上可以搜索到很多关于它的资料，关于介绍，如何使用等。简单来说就是可以使用它来做一些流式布局，开发者只需要将需要的视图丢到<code>UIStackView</code>中，然后设置它的一些属性来展现所需要的布局，因此无需自己再去添加各种约束，所有约束不在由开发者自己去管理，这对于一些还不会使用<code>AutoLayout</code>的开发者来说是一个福音。复杂来说，因为<code>UIStackView</code>是可以嵌套使用的，那么再结合上一些简单的约束，那么就可以完成任何复杂的界面了。想想之前需要各种管理约束，而现在有了它只需要将视图丢给它，改几个属性然后界面就做好了，是不是爽到爆，开发效率又提升一个档次啊。下面提供几个介绍<code>UIStackView</code>的文章，使还不太了解的同学可以了解一下，传送门在此：</p>

<blockquote><p><a href="http://code.tutsplus.com/tutorials/ios-9-getting-started-with-uistackview--cms-24193">iOS 9: Getting Started with UIStackView</a></p>

<p><a href="http://www.cocoachina.com/ios/20150623/12233.html">中文翻译版</a></p>

<p><a href="http://www.appcoda.com/stack-views-intro/">An Introduction to Stack Views in iOS 9 and Xcode 7</a></p>

<p><a href="http://www.cocoachina.com/ios/20150820/13118.html">中文翻译版</a></p></blockquote>

<p>介绍完<code>UIStackView</code>的优势想必大家都已经跃跃欲试了，我自身对于这个控件都是十分的期待，因为在开发中你可以不用去写大段的创建<code>constraints</code>的代码了，如果你使用<code>xib</code>或者<code>storyboard</code>的话，那么在<code>IB</code>中你也不需要去连接各种约束了，这是多么棒的一种体验，而且在<code>Xcode7</code>的<code>IB</code>中右下角往常用来增加约束，修正视图的位置又新增加了一个<code>stack</code>按钮，可以快速的将所选视图加入到<code>UIStackView</code>中，可见苹果也是推荐开发者使用<code>UIStackView</code>的。但是<code>UIStackView</code>是在<code>iOS9</code>才推出的，最低支持的系统也是<code>iOS9</code>，这就蛋疼了，现在能有几个<code>APP</code>是从<code>iOS9</code>开始支持的，如此一来这个控件就成了鸡肋般的存在，再低版本下根本无法使用。自己在业务开发中经常会想这个需求用<code>UIStackView</code>简直就是妙解，而我却还在这里痛苦的连约束……鉴于这个强烈的需求，<code>FDStackView</code>出现了，它就是为了解决<code>UIStackView</code>在低于<code>iOS9</code>的系统下无法使用的问题。在<code>FDStackView</code>之前也已经有了一些类似的开源项目，比如<code>OAStackView</code>和<code>TZStackView</code>，然而他们都不能满足我们的需求，局限性还是比较大的，比如不支持<code>IB</code>，某些功能还没有实现，类名需要使用非<code>UIStackView</code>，在我们看来这些对开发者来说都是不友好的，开发者需要的是一款功能完善，支持<code>IB</code>，使用时完全无感，在<code>Xcode7</code>上直接使用<code>UIStackView</code>即可，接下来的事情交给<code>FDStackView</code>就好，它负责将<code>UIStackView</code>在低于<code>iOS9</code>的系统上运行。需要注意的是如果使用<code>IB</code>的话，那么<code>IB</code>的<code>Builds for</code>属性需要设置为<code>iOS 9.0 and later</code>。如图所示：</p>

<p><img class="<a" src="href="https://raw.githubusercontent.com/forkingdog/FDStackView/master/Snapshots/snapshot0.png">https://raw.githubusercontent.com/forkingdog/FDStackView/master/Snapshots/snapshot0.png</a>"></p>

<h2>Research</h2>

<p>这个技术项目有一大部分的时间，我们都是在做调研工作，首先我们需要把<code>UIStackView</code>玩的很熟练，它的各种属性，各种状态以及他们的组合关系分别是什么样的，其次我们需要解决的问题有：</p>

<ol>
<li>使用低系统版本的<code>API</code>和控件创建一个和<code>UIStackView</code>一模一样的控件<code>FDStackView</code>;</li>
<li>在低系统版本运行<code>UIStackView</code>的时候使用我们的<code>FDStackView</code>;</li>
<li>使<code>FDStackView</code>获得<code>Interface Builder</code>的支持。</li>
</ol>


<p>解决了以上三个问题后，那么这个项目基本上也就算是完成了，第一个是工作量最大的工程，它又可以拆分为以下几个技术点：</p>

<ul>
<li><code>alignment</code>和<code>distribution</code>的约束如何添加和管理；</li>
<li><code>spacing</code>和<code>distribution</code>的关系及约束的创建；</li>
<li>子视图的隐藏显示如何处理；</li>
<li>子视图的<code>intrinsicContentSize</code>发生变化时如何处理。</li>
</ul>


<p>首先我们假设在第一个难点已经解决的前提下去攻克其他的难点，毕竟有其他开源方案的存在，说明这个不是不可行的。</p>

<p>至于第二个难点，<code>UIStackView</code>在低系统版本编译时会报找不到符号的<code>error</code>，那么解决的思路就是在低系统版本将<code>UIStackView</code>的符号写进去，然后在<code>runtime</code>将符号与我们的<code>FDStackView</code>做关联，从而使低系统版本也能够运行<code>UIStackView</code>，而实际上在起作用的是我们的<code>FDStackView</code>。这里使用到的<code>黑魔法</code>就是汇编语言，网上已经有大神给出了类似的<a href="https://gist.github.com/OliverLetterer/4643294">解决方案</a>，对其进行优化和修改之后应该就能满足我们的需求。</p>

<p>最后一个难点就是使<code>FDStackView</code>获得<code>Interface Builder</code>的支持，因为我们是<code>IB</code>的重度使用者，一个不能在<code>IB</code>上使用的控件一定不是一个好控件。所以一定要让<code>FDStackView</code>能够在<code>IB</code>上使用，有一个方案就是直接使用<code>UIView</code>然后把他的<code>Class</code>指定为<code>FDStackView</code>，将<code>Axis</code>、<code>Alignmen</code>和<code>Distribution</code>等属性通过<code>IBInspectable</code>使其可以在<code>IB</code>中编辑和设置，但是这样一个是<code>IBInspectable</code>在<code>IB</code>中的显示效果很烂，说实话就是不好用，再一个就是用了<code>UIView</code>没有办法像<code>UIStackView</code>那样在<code>IB</code>中可以直接预览布局效果，这就是很差的一种体验了。最好的方案就是在<code>IB</code>中仍然使用<code>UIStackView</code>，使其在<code>IB</code>中有最佳的体验，然后借助上一难点的解决方案，在低系统版本中使用<code>FDStackView</code>代替<code>UIStackView</code>。这样就会带来两个其他问题：</p>

<ol>
<li><code>IB</code>的构建版本是根据<code>Project</code>的部署版本来的，如果项目不是支持<code>iOS9</code>的话那么会报这样一个<code>error</code>:<code>”UIStackView before iOS 9.0”</code>；</li>
<li>如何使<code>IB</code>构建出来的<code>FDStackView</code>获得在<code>IB</code>中给<code>UIStackView</code>所设置的各种属性。
这两个问题，第一个只需要将<code>IB</code>的构建版本设置为<code>iOS9</code>及以后即可，目前来看是没有问题的，但是还不知道其他的控件被<code>IB</code>搞成<code>iOS9</code>的版本，在低系统版本上会不会有问题，这个还需要后续的验证。第二个问题，由于使用<code>IB</code>创建的<code>UIKit</code>控件都会由<code>initWithCoder:</code>进行初始化，因此弄清楚<code>NSCoder</code>的<code>decode</code>过程就能将<code>IB</code>设置的属性赋值给所创建的对象了。</li>
</ol>


<p>解决完以上两个难点，就可以回过头来研究第一个了，就是创建一个和<code>UIStackView</code>一模一样的<code>FDStackView</code>。这里我们对<code>UIStackView</code>进行了详细的研究，包括<code>dump</code>出所有<code>UIStackView</code>的相关私有类，各个类的方法，实例变量等。还需要添加符号断点来跟踪各个方法的调用顺序及各个实例变量的值得变化情况。同时还需要分析各个状态下<code>UIStackView</code>的约束<code>constraints</code>的情况，包括约束的个数，连接的方式，及约束所添加到的视图等。经过以上的各种分析之后，我们又通过在<code>IB</code>中借助<code>UIView</code>手动连接约束的方式，连出每一个<code>UIStackView</code>所对应的状态。经过这一番调查与研究我们已经大概摸清的<code>UIStackView</code>的工作原理与实现方式。</p>

<p>与此同时我们还发现了两个<code>UIStackView</code>的<code>bug</code>，本以为在<code>Xcode7</code>正式发布之后会得到修复，可是遗憾的是从我们开始研究的时候的<code>beta5</code>到后来的<code>beta6</code>、<code>GM</code>和正式版这两个<code>bug</code>依然存在，后面我会介绍一下这两个<code>bug</code>。</p>

<h2>Implementation</h2>

<p>下面介绍一下具体的实现细节，同样还是从第二个点说起，最终起关键作用的代码是这些：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-</span>
</span><span class='line'><span class="c1">// Runtime injection start.</span>
</span><span class='line'><span class="c1">// Assemble codes below are based on:</span>
</span><span class='line'><span class="c1">// &lt;a href=&quot;https://github.com/0xced/NSUUID/blob/master/NSUUID.m&quot;&gt;https://github.com/0xced/NSUUID/blob/master/NSUUID.m&lt;/a&gt;</span>
</span><span class='line'><span class="c1">// &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">pragma</span> <span class="n">mark</span> <span class="o">-</span> <span class="n">Runtime</span> <span class="n">Injection</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;&lt;</span><span class="k">strong</span><span class="o">&gt;</span><span class="n">asm</span><span class="p">(</span>
</span><span class='line'>      <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;.</span><span class="n">section</span>        <span class="o">&lt;/</span><span class="k">strong</span><span class="o">&gt;</span><span class="n">DATA</span><span class="p">,</span><span class="n">__objc_classrefs</span><span class="p">,</span><span class="n">regular</span><span class="p">,</span><span class="n">no_dead_strip</span><span class="err">\</span><span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="k">if</span> <span class="n">TARGET_RT_64_BIT</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="s">&quot;.align          3</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>  <span class="s">&quot;L_OBJC_CLASS_UIStackView:</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>  <span class="s">&quot;.quad           _OBJC_CLASS_$_UIStackView</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="k">else</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="s">&quot;.align          2</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>  <span class="s">&quot;_OBJC_CLASS_UIStackView:</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>  <span class="s">&quot;.long           _OBJC_CLASS_$_UIStackView</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="s">&quot;.weak_reference _OBJC_CLASS_$_UIStackView</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>  <span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// Constructors are called after all classes have been loaded.</span>
</span><span class='line'><span class="o">&lt;</span><span class="k">strong</span><span class="o">&gt;</span><span class="n">attribute</span><span class="o">&lt;/</span><span class="k">strong</span><span class="o">&gt;</span><span class="p">((</span><span class="n">constructor</span><span class="p">))</span> <span class="k">static</span> <span class="kt">void</span> <span class="n">FDStackViewPatchEntry</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="kt">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="k">@autoreleasepool</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="c1">// &amp;gt;= iOS9.</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">objc_getClass</span><span class="p">(</span><span class="s">&quot;UIStackView&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">Class</span> <span class="o">*</span><span class="n">stackViewClassLocation</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="k">if</span> <span class="n">TARGET_CPU_ARM</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="kr">__asm</span><span class="p">(</span><span class="s">&quot;movw %0, :lower16:(_OBJC_CLASS_UIStackView-(LPC0+4))</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>              <span class="s">&quot;movt %0, :upper16:(_OBJC_CLASS_UIStackView-(LPC0+4))</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>              <span class="s">&quot;LPC0: add %0, pc&quot;</span> <span class="o">:</span> <span class="s">&quot;=r&quot;</span><span class="p">(</span><span class="n">stackViewClassLocation</span><span class="p">));</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">elif</span> <span class="n">TARGET_CPU_ARM64</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="kr">__asm</span><span class="p">(</span><span class="s">&quot;adrp %0, L_OBJC_CLASS_UIStackView@PAGE</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>              <span class="s">&quot;add  %0, %0, L_OBJC_CLASS_UIStackView@PAGEOFF&quot;</span> <span class="o">:</span> <span class="s">&quot;=r&quot;</span><span class="p">(</span><span class="n">stackViewClassLocation</span><span class="p">));</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">elif</span> <span class="n">TARGET_CPU_X86_64</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="kr">__asm</span><span class="p">(</span><span class="s">&quot;leaq L_OBJC_CLASS_UIStackView(%%rip), %0&quot;</span> <span class="o">:</span> <span class="s">&quot;=r&quot;</span><span class="p">(</span><span class="n">stackViewClassLocation</span><span class="p">));</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">elif</span> <span class="n">TARGET_CPU_X86</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="kt">void</span> <span class="o">*</span><span class="n">pc</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>        <span class="kr">__asm</span><span class="p">(</span><span class="s">&quot;calll L0</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>              <span class="s">&quot;L0: popl %0</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>              <span class="s">&quot;leal _OBJC_CLASS_UIStackView-L0(%0), %1&quot;</span> <span class="o">:</span> <span class="s">&quot;=r&quot;</span><span class="p">(</span><span class="n">pc</span><span class="p">),</span> <span class="s">&quot;=r&quot;</span><span class="p">(</span><span class="n">stackViewClassLocation</span><span class="p">));</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="k">else</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">error</span> <span class="n">Unsupported</span> <span class="n">CPU</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="k">if</span> <span class="p">(</span><span class="n">stackViewClassLocation</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="o">!*</span><span class="n">stackViewClassLocation</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kt">Class</span> <span class="k">class</span> <span class="o">=</span> <span class="n">objc_allocateClassPair</span><span class="p">(</span><span class="n">FDStackView</span><span class="p">.</span><span class="k">class</span><span class="p">,</span> <span class="s">&quot;UIStackView&quot;</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="k">class</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">objc_registerClassPair</span><span class="p">(</span><span class="k">class</span><span class="p">);</span>
</span><span class='line'>                <span class="o">*</span><span class="n">stackViewClassLocation</span> <span class="o">=</span> <span class="k">class</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>首先说一下<code>__asm</code>:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Use the asm, _asm, or &lt;strong>asm keyword to place assembly language statements in the middle of your C or C++ source code. Any C++ symbols are replaced by the appropriate assembly language equivalents.
</span><span class='line'>You can group assembly language statements by beginning the block of statements with the asm keyword, then surrounding the statements with braces ({}).
</span><span class='line'>Note: The &lt;/strong>asm form is the only one supported by Clang-based C++ compilers.</span></code></pre></td></tr></table></div></figure>
意思就是说在你的<code>C</code>或<code>C++</code>源代码中放入汇编代码用来替换任何<code>C++</code>的符号。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="kr">__asm</span><span class="p">(</span>
</span><span class='line'>            <span class="cm">/**</span>
</span><span class='line'><span class="cm">       this is a data section for objc2 class references with the following attributes:</span>
</span><span class='line'><span class="cm">       * regular: &amp;ldquo;A regular section may contain any kind of data and gets no special processing from the link editor. This is the default section type. Examples of regular sections include program instructions or initialized data.&amp;rdquo;</span>
</span><span class='line'><span class="cm">       * no_dead_strip: &amp;ldquo;The no_dead_strip section attribute specifies that a particular section must not be dead-stripped.&amp;rdquo;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">&lt;pre&gt;&lt;code&gt;   Documentation can be found here: https://developer.apple.com/library/mac/#documentation/developertools/Reference/Assembler/040-Assembler_Directives/asm_directives.html</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="s">&quot;.section        __DATA,__objc_classrefs,regular,no_dead_strip</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="k">if</span> <span class="n">TARGET_RT_64_BIT</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="s">&quot;.align          3</span><span class="se">\n</span><span class="s">&quot;</span> <span class="c1">// align the next label to 2^3 bytes = 64 bit for 64 bit platforms</span>
</span><span class='line'>  <span class="s">&quot;L_OBJC_CLASS_UIStackView:</span><span class="se">\n</span><span class="s">&quot;</span>  <span class="c1">// the L_OBJC_CLASS_UIStackView label will store the _OBJC_CLASS_$_UIStackView label, which is weak referenced (see below)</span>
</span><span class='line'>  <span class="s">&quot;.quad           _OBJC_CLASS_$_UIStackView</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="k">else</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="s">&quot;.align          2</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>  <span class="s">&quot;_OBJC_CLASS_UIStackView:</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>  <span class="s">&quot;.long           _OBJC_CLASS_$_UIStackView</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="cm">/**</span>
</span><span class='line'><span class="cm">   .weak_reference: &quot;The .weak_reference directive causes symbol_name to be a weak undefined symbol present in the output file’s symbol table. This is used by the compiler when referencing a symbol with the weak_import attribute.&quot;</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="s">&quot;.weak_reference _OBJC_CLASS_$_UIStackView</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>  <span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>先来说这一个部分，大神的<a href="https://gist.github.com/OliverLetterer/4643294">解决方案</a>给出了英文注释，尝试着直译了一下：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>这是一个由regular和no_dead_strip属性所标明的objc2类的数据区间。
</span><span class='line'>regular:一个regular区间一般包含各种类型的数据而且他们不会被连接器做特殊处理。这是默认的区间类型，包括程序指令和初始化数据是regular区间。
</span><span class='line'>no_dead_strip:一个no_dead_strip区间标识出那些一定不能dead_strip的特殊区间。</span></code></pre></td></tr></table></div></figure>
发现还不如不译，就直接说一下大概的意思吧。
第一行是取得符号所在的区间，之后区分<code>64</code>和<code>32</code>位系统，将<code>_OBJC_CLASS_$_UIStackView</code>这个符号与自定的符号做一个<code>weak</code>类型的关联。</p>

<p>接下来就是<code>__attribute__((constructor))</code>这个黑魔法，这个标识的方法会在所有的类<code>load</code>之后，<code>main</code>函数调用之前调用。所以此时<code>FDStackView</code>已经被<code>load</code>了。再之后就是判断<code>runtime</code>是否存在<code>UIStackView</code>，不存在的话就根据不同的系统平台将指向<code>_OBJC_CLASS_$_UIStackView</code>这个符号的指针存储在<code>stackViewClassLocation</code>中，接下来通过<code>runtime</code>创建<code>UIStackView</code>这个类并作为<code>FDStackView</code>的子类，并注册进<code>runtime</code>，最后将<code>UIStackView</code>作为<code>stackViewClassLocation</code>这个指针的值。如此一来在低系统版本中<code>UIStackView</code>就能作为<code>FDStackView</code>的子类使用了。它没有重载任何方法，因此就跟使用直接<code>FDStackView</code>一模一样。</p>

<p>接下来的问题是<code>IB</code>加载出来的<code>UIStackView</code>如何将属性值设置到我们的<code>FDStackView</code>上，这个在前面研究是已经有结论，首先需要将<code>IB</code>的<code>build for</code>做下修改，然后<code>IB</code>创建的<code>UIKit</code>控件都会由<code>initWithCoder:</code>进行初始化，所以所有的信息都在<code>NSCoder</code>这个对象中，<code>NSCoder</code>提供了一系列的<code>decode</code>方法，由于<code>key</code>是字符串，所以可以在汇编代码处直接看到，所以通过加符号断点的方式找到这几个<code>key</code>。</p>

<p><img class="<a" src="href="https://oac67o3cg.qnssl.com/1475116128.png">https://oac67o3cg.qnssl.com/1475116128.png</a>">
<img class="<a" src="href="https://oac67o3cg.qnssl.com/1475116163.png">https://oac67o3cg.qnssl.com/1475116163.png</a>"></p>

<p>如此一来就可以直接在<code>FDStackView</code>的<code>initWithCoder:</code>方法中取到值，再将这几个值赋值即可
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithCoder:</span><span class="p">(</span><span class="bp">NSCoder</span> <span class="o">*</span><span class="p">)</span><span class="nv">decoder</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">self</span> <span class="o">=</span> <span class="p">[</span><span class="nb">super</span> <span class="nl">initWithCoder</span><span class="p">:</span><span class="n">decoder</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Attributes of UIStackView in interface builder that archived.</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span> <span class="nl">commonInitializationWithArrangedSubviews</span><span class="p">:[</span><span class="n">decoder</span> <span class="nl">decodeObjectForKey</span><span class="p">:@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">UIStackViewArrangedSubviews</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;]];</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">axis</span> <span class="o">=</span> <span class="p">[</span><span class="n">decoder</span> <span class="nl">decodeIntegerForKey</span><span class="p">:@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">UIStackViewAxis</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">distribution</span> <span class="o">=</span> <span class="p">[</span><span class="n">decoder</span> <span class="nl">decodeIntegerForKey</span><span class="p">:@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">UIStackViewDistribution</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">alignment</span> <span class="o">=</span> <span class="p">[</span><span class="n">decoder</span> <span class="nl">decodeIntegerForKey</span><span class="p">:@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">UIStackViewAlignment</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">spacing</span> <span class="o">=</span> <span class="p">[</span><span class="n">decoder</span> <span class="nl">decodeDoubleForKey</span><span class="p">:@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">UIStackViewSpacing</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">baselineRelativeArrangement</span> <span class="o">=</span> <span class="p">[</span><span class="n">decoder</span> <span class="nl">decodeBoolForKey</span><span class="p">:@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">UIStackViewBaselineRelative</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">layoutMarginsRelativeArrangement</span> <span class="o">=</span> <span class="p">[</span><span class="n">decoder</span> <span class="nl">decodeBoolForKey</span><span class="p">:@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">UIStackViewLayoutMarginsRelative</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>最后就是通过系统的<code>API</code>创建<code>constraints</code>来实现<code>FDStackView</code>了，这里涉及的内容比较多，包括几个辅助的私有类，及<code>Alignment</code>和<code>Distribution</code>方向上的约束创建，子视图隐藏，<code>intrinsicContentSize</code>改变如何处理等。这里我们都尽可能的与猜测到的<code>UIStackView</code>的实现保持一致。这些内容将会在后续的另一篇文章中介绍。</p>

<h2>UIStackView Bugs</h2>

<p>现在来说一下我们在调研<code>UIStackView</code>时发现的两个<code>bug</code>，<a href="https://github.com/wtlucky/UIStackViewBugDemo">测试的<code>Demo</code></a>已经放在<code>Github</code>上。</p>

<p>这个测试<code>Demo</code>会借助我们的<code>FDStackView</code>来演示对比出<code>UIStackView</code>的<code>bug</code>，上面是系统原生的<code>UIStackView</code>，下面是我们的<code>FDStackView</code>，两者的参数设置是完全相同的。</p>

<p>先来看第一个，当<code>Distribution</code>设置为<code>UIStackViewDistributionFillProportionally</code>时，并且存在<code>spacing</code>时就会出现问题，如图所示：</p>

<p><img class="<a" src="href="http://i3.piimg.com/22c9f3dc8b429bdd.jpg">http://i3.piimg.com/22c9f3dc8b429bdd.jpg</a>"></p>

<p><code>UIStackViewDistributionFillProportionally</code>这个属性的意思是子视图的宽度会根据他们内容的宽度比例而在<code>UIStackView</code>中占据对应的宽度，即他们的实际的宽度比应该是他们的内容固有宽度（<code>intrinsicContentSize</code>）的比例，<code>Demo</code>中三个<code>Label</code>的固有宽度即汉字的宽度是<code>4:1:2</code>，那么在<code>UIStackView</code>中他们所占据的宽度也应该是<code>4:1:2</code>，这在<code>spacing</code>为<code>0</code>的情况下是ok的。</p>

<p>如果存在<code>spacing</code>的话，那么<code>UIStackView</code>应该先减去子视图之间的<code>spacing</code>，然后再去按比例分布子视图的宽度。这里可以看到<code>UIStackView</code>的布局是烂的了，而<code>FDStackView</code>的布局是ok的。</p>

<p>这里我们通过分析<code>UIStackView</code>身上的<code>constraints</code>大概得出<code>UIStackView</code>出现这个<code>bug</code>的原因是，他们的算法出了问题，他们这一部分的约束是这样添加的，每一个子视图的宽度等于<code>UIStackView</code>的宽度乘上一个比例系数，即<code>AutoLayout</code>计算公式<code>y  = m * x + c</code>中的<code>m</code>系数，<code>c</code>的值一直为<code>0</code>。他们在计算<code>m</code>的时候出了问题，忽略了<code>spacing</code>的存在，也就是在计算中没有计算上<code>spacing</code>的值。</p>

<p>具体拿<code>Demo</code>来看的话，<code>UIStackView</code>的最左边的<code>Label</code>的宽度应该是这样计算的<code>label.width = 4 * UIStackView.width / (4 + 1 + 2)</code>，这是<code>spacing</code>为<code>0</code>时，<code>m</code>的值就是<code>4 / (4 + 1 + 2)</code>，这没有问题 ，但是如果有<code>spacing</code>的话，他们把<code>spacing</code>也作为了分母的一部分，认为<code>spacing</code>也是可以按比例显示宽度的，所以<code>m</code>的值就成为了<code>4 / (4 + 1 + 2 + spacing)</code>（这里的<code>spacing</code>不是<code>UIStackView</code>设置<code>spacing</code>的值，而应该是实际<code>UIStackView</code>中出现的所有<code>spacing</code>的和）。因为<code>spacing</code>被当作分母计算了进去，那么在布局的时候<code>spacing</code>也应该按照计算出的系数乘上<code>UIStackView</code>的宽度来显示，但实际上他们没有这么做，而是把<code>spacing</code>按固定值来显示了，这样就会因为分母加入了<code>spacing</code>导致所有子视图计算出的<code>m</code>偏小，进而显示出来也就会偏小，到了最后一个视图时，由于约束优先级的缘故导致这个宽度的约束不再起作用，从而导致被拉长，出现了上图的效果。</p>

<p>所以这里<code>UIStackView</code>是算法出了问题而显示时又按正确的样式来显示，所以布局就烂了，其实在有<code>spacing</code>的状态下就不应该忽略<code>c</code>的值了，而且<code>spacing</code>也不应该参与到分母中去计算，正确的约束应该是这个样子的<code>label.width = 4 * UIStackView.width / (4 + 1 + 2) - 4 * spacing / (4 + 1 + 2)</code>，这时<code>c</code>就有值了，不再是<code>0</code>而是<code>-4 * spacing / (4 + 1 + 2)</code>。</p>

<p>整体来说<code>UIStackView</code>在处理<code>UIStackViewDistributionFillProportionally</code>这个属性的时候采取的约束添加方式不是最好的，处理起来是比较复杂的，这样处理会出现很多非整数情况，一个是计算复杂，在一个也会丢失精度。所以我们在<code>FDStackView</code>中没有使用这种连接方式，而是使用了另外一种方法，后面的文章会介绍到。</p>

<p>另外一个<code>bug</code>是当<code>Alignment</code>属性设置为<code>UIStackViewAlignmentFill</code>时，当一个最高的子视图隐藏掉了时，<code>UIStackView</code>的高度并没有变化，这时它应该变为第二高的子视图的高度，具体如图所示：</p>

<p><img class="<a" src="href="http://imgchr.com/images/hidingBug.gif">http://imgchr.com/images/hidingBug.gif</a>"></p>

<p>这种情况只有在属性设置为<code>UIStackViewAlignmentFill</code>时才会出现，具体的出现原因我们也有分析出来的结论，但是涉及到<code>Alignment</code>方向上约束添加的问题，这个会在后一篇文章中提到，所以这里就先不做解释，之后在说。我们的<code>FDStackView</code>修复了这个问题，但是在一种情况下也会失去作用就是给这个要隐藏的视图收到添加了一个高优先级的高度约束的情况下，不过一般情况下我们使用<code>UIStackView</code>基本都不会再给子视图添加约束了。</p>

<p>第一篇文章就介绍这么多，后面我会找时间把第二篇文章（Part 2）整理出来。</p>

<p>————————————</p>

<p><img src="https://oac67o3cg.qnssl.com/1475114982.png" alt="" /></p>
]]></content>
  </entry>
  
</feed>
